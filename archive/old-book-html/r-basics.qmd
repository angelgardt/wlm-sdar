# Основы R {#rbasics}

## Установка {#rbasics-rinstall}

::: {.lab-chapter .lab-junior}
:::

Чтобы стать счастливым пользователем R, надо установить на свой комп две программы:

- собственно [R](https://cran.r-project.org/)
  + на [Win](https://cran.r-project.org/bin/windows/base/)
  + на [Mac](https://cran.r-project.org/bin/macosx/)
  + на [Linux](https://cran.rstudio.com/bin/linux/)
- IDE [RStudio](https://posit.co/download/rstudio-desktop/)[^r-studio]

[^r-studio]: По пути надо ещё не перепутать её с [R-Studio](https://www.r-studio.com/ru/), которая восстанавливает данные с диска. Критическое сходство названий двух программ обязывает к повышенной внимательности при написании работ/статей/отчётов/заявок на гранты, в которых вы ссылаетесь на RStudio --- иногда рецензенты весьма недоумевают, как исследователи анализировали данные с помощью ПО для восстановления данных…

Причем во избежание возможных проблем, надо поставить программы именно в этом порядке --- сначала R, а потом RStudio, иначе IDE может на найти R и будет ругаться.

### Зачем ставить две проги? {#rbasics-why-we-need-both}

Вопрос не безосновательный. В целом, можно обойти и только R --- можно работать на нём хоть из командной строки --- однако это всё же не совсем удобно. Интерфейс самого R довольно скудный и не слишком приветливый.

<center>
<figure>
<img src="./pics/r-interface.png">
<figcaption>
Интерфейс R
</figcaption>
</figure>
</center>

RStudio же, являясь, как уже вскользь отмечалось выше, интегрированной средой разработки (IDE), расширяет возможности R, предоставляет более юзабельный интерфейс для взаимодействия с языком и в целом делает работу с R радостной и приятной. С её интерфейсом и возможностями мы познакомимся далее.

RStudio это не единственная среда для работы с R, но определенно самая удобная и популярная, поэтому мы будем пользоваться именно ею. RStudio является IDE, разработанной специально для работы в R, однако это вовсе не значит, что в ней нельзя использовать другие языки программирования. Например, книжка, которуя вы сейчас читаете, написана с использованием [R](https://www.r-project.org/about.html), [Python](https://www.python.org/), [HTML](http://htmlbook.ru/html), [SASS](https://sass-lang.com/), [JavaScript](https://learn.javascript.ru/), [YAML](https://yaml.org/) и других языков --- при этом вся работа велась в RStudio. Вот такая мощная вещь.

### Что такое IDE? {#rbasics-what-is-ide}

Интегрированная среда разработки (IDE, integrated development environment) --- это специальная программа, которое предоставляет широкий спектр возможностей для разработки программного обеспечения. Возможно, вы слышали такие слова, как [PyCharm](https://www.jetbrains.com/ru-ru/pycharm/) или [Visual Studio Code](https://code.visualstudio.com/) --- это всё варианты IDE.

Обычно IDE содержит несколько ключевых компонентов:

- текстовый редактор для написания скриптов
- [транслятор](#appendix_proglang) языка
- отладчик (debugger)
- средства автоматизации сборки (build automation tools)

Обычно IDE позволяют работать с несколькими языками программирования (ЯП), но бывают и специализированные.

> И хотя всё ещё присутствует холивар относительного того, является ли R языком программирования (ССЫЛКА), RStudio однозначно можно назвать полноценной IDE, так как разработка в ней вполне может вестить. Пример продукта разработки прямо перед вами --- книжка и другие материалы курса.


## Подводные камни установки {#rbasics-installation-problems}

::: {.lab-chapter .lab-junior}
:::

В целом, установщики операционных систем обычно хорошо справляются со своей задачей, и в 90% случаев всё стаёт без багов. Однако ниже я оставлю некоторые комментарии о проблемах, с которыми сталкивался сам или о которых говорили знакомые и коллеги.

### Windows {#rbasics-installation-problems-win}

Самая частая проблема --- имя пользователя на кириллице. Компьютер вообще достаточно плохо переваривает кириллические символы. Особенную же проблему составляют такие символы в путях к файлам. Поскольку на Винде папка пользователя называется именем пользователя, то в случае киррилического имени, естественно, её имя будет на кириллице. Это можно пережить, перезадав некоторое дефолтные пути в настройках, однако если есть возможность переименовать пользователя и папку, я бы рекомендовал это сделать. Ну, так, чтобы не было неожиданных внезапностей.

### MacOS {#rbasics-installation-problems-mac}

Тут в 99.9% случаев всё ровно. Бывает уже в процессе работы некоторые пакеты жалуются на недоустановленное что-то или на какие-либо несовместимости, но это случается невероятно редко и обычно достаточно легко лечится.

### Linux {#rbasics-installation-problems-linux}

Если вы пользователь Linux, значит R с RStudio вы ставили через Terminal. Скорее всего, всё прошло хорошо, и всё работает. Проблемки могут случиться чуть дальше, когда мы будем ставить дополнительные аровские пакеты, в которых будет идти основная наша работа --- R может не найти некоторые системные пакеты. Такая проблема у меня возникла на Ubuntu 22.04 --- помогла команда ниже:

```
sudo apt install r-base-dev
sudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev linfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
```

Сначала мы будем знакомиться с базовым R и работать только в нём, но имейте в виду, что тут есть некая команда, которая может пригодиться.


## Про R {#rbasics-r-about}

::: {.lab-chapter .lab-junior}
:::

### Откуда оно взялось {#rbasics-where-r-from}

R --- популярный язык программирования среди исследователей в социальных и гуманитарных науках. Если совсем коротко, то начиналось всё с языка S, который был языком программирования для статистического анализа. Потом его доработали и получился R.

Хотя сегодня всё ещё можно услышать, что «R --- это язык программирования для статистической обработки данных», это ложь. Да, когда-то давно дела обстояли именно так, но сейчас R --- это полноценный язык программирования, который позволяет решать широкий спект задач от статистического анализа и data wrangling до машинного обучения, моделирования и создания сайтов и приложений.

Конечно, с точки зрения сурового программирования к R есть некоторые вопросики(ССЫЛКА).

### Почему R? {#rbasics-why-r}

В сравнении с «классическим» ПО для анализа данных (типа SPSS) R круче, потому что это:

- **свободное ПО** (часть [GNU Project](https://en.wikipedia.org/wiki/GNU_Project))
  + бесплатно, без смс и регистрации
- **динамично развивающаяся среда**
  + обновляются функции, развивается IDE
- **громадные возможности расширения функционала**
  + более 20 000 пакетов
    - многие написаны специально для какой-либо профессиональной области --- например, есть пакеты для биологов, психологов, лингвистов… 
- **открытый исходный код**
  + можно посмотреть «мясо» функций и понять, как они работают изнутри --- нет проблемы «черного ящика»
- **возможность написать свои пакеты**
  + и сделать аналитических мир лучше
- **большое сообщество по всему миру**, много ресурсов для задавания вопросов --- даже просто загуглив какой-либо вопрос или ошибку, вы, скорее всего, попадете на один из перечисленных ниже ресурсов
  + [Stack Overflow](https://stackoverflow.com/) --- крайне полезный ресурс с ответами на вопросы, и не только по R. Есть версия [на русском](https://ru.stackoverflow.com/).
  + [Stack Exchange](https://stackexchange.com/) --- подобен ресурсу выше, но спектр вопросов еще шире --- тут можно найти и что-то про математику, и про методы анализа данных, и ещё мого чего
  + [Posit Community](https://community.rstudio.com/) --- форум с вопросами и ответами про R
  + [R-bloggers](https://www.r-bloggers.com/) --- про новинки в R и рядом с ним
  + [Хабр про R](https://habr.com/ru/hub/r/)
  + …
- [**Linear Warriors vs Quadratic Wizards**](https://1d4chan.org/wiki/Linear_Warriors,_Quadratic_Wizards)
  + в SPSS (и другие GUI[^gui] пакеты) ниже порог вхождения, но развитие навыков --- линейное
    - мы просто находим новые кнопки, на которые можно понажимать и что-то получить
  + в R порог вхождения выше, но впоследствии случается резкий буст, и вы становитесь богами дата-аналитики
    - чем больше методов анализа мы изучаем, тем глубже мы погружаемся в сам язык и его пакеты, а необходимость сделать так, чтобы все работало, стимулирует нам глубже разобраться в сами методах, чтобы код не падал там, где не надо

:::{.column-margin}
<center>
<figure>
<img src="./pics/LinearWarriors_QuadraticWizards.webp">
<figcaption>
[Источник](https://1d4chan.org/wiki/Linear_Warriors,_Quadratic_Wizards)
</figcaption>
</figure>
</center>
:::

- **возможность рисовать [красивые картинки](https://r-graph-gallery.com/index.html)**
  + а также создавать интерктивные отчеты, книжки, сайты, блоги, дашборды…
- **[репродуцируемость](https://en.wikipedia.org/wiki/Reproducibility_Project) результатов**
  + ибо с кризисом воспроизводимости приходится всячески бороться

[^gui]: GUI --- графический интерфейс пользователя (graphical user interface)

### R vs Python {#rbasics-r-vs-py}

> --- Я вот не могу выбрать: делать на R или на Python?<br>
> --- Да какая разница! Главное --- делай!

<center>
<figure>
<img src="./pics/R-vs-Python.jpeg">
<figcaption>
[Источник](https://andreyex.ru/programmirovanie/r-vs-python-samaya-aktualnaya-diskussiya-dlya-nachinayushhih-uchenyh-dannyh/)
</figcaption>
</figure>
</center>

## Интерфейс RStudio {#rbasics-rstudio-interface}

::: {.lab-chapter .lab-junior}
:::

<center>
<figure>
<img src="./pics/rstudio-interface.png">
<figcaption>Интерфейс RStudio</figcaption>
</figure>
</center>

## Обновления {#rbasics-updates}

### Обновление RStudio {#rbasics-updates-rstudio}

### Обновление R {#rbasics-updates-r}

### Обновление пакетов {#rbasics-updates-packages}

Ошибки has non-zero exit status

Проблема обратной совместимости: функции иногда переезжают из пакета в пакет без предупреждения


## R как калькулятор {#rbasics-r-calculator}

::: {.lab-chapter .lab-junior}
:::

## Assignment. Переменные и объекты {#rbasics-vars-and-objects}

::: {.lab-chapter .lab-junior}
:::


