# Знакомство с R {#r-intro}

```{r opts, echo=FALSE, eval=TRUE}
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, warning = FALSE, message = FALSE, error = FALSE)
```

:::{.intro}
В этой главе мы познакомимся с самыми основами работы в R и начнем прям от Адама --- с установки и интерфейса. Если вы уже видели R и RStudio и хотите сразу стартовать с работы в среде, прыгайте [сюда](#r-intro-console).
:::

## Сверхкраткая история R {#r-intro-history}

:::{.lab-junior}
:::



## Установка {#r-intro-installation}

:::{.lab-junior}
:::

Мы сейчас будем устанавливать все программы…[^fokin-meme]

[^fokin-meme]: На случай, если новое поколение утратило связь с культурным прошлым, а старое поколение желает, чтобы ему подсвело олдскулы --- [источник](https://memepedia.ru/sashko-fokin/).

### Установка R {#r-intro-rinstallation}

:::{.lab-junior}
:::

Установить R можно с репозитория основного репозитория [CRAN (The Comprehensive R Archive Network)](https://cran.r-project.org/). Существуют версии R для всех трёх наиболее распространенных десктопных операционных систем:

* для [Win](https://cran.r-project.org/bin/windows/base/)
* для [macOS](https://cran.r-project.org/bin/macosx/)
* для [Linux](https://cran.rstudio.com/bin/linux/)

В целом, установщики операционных систем обычно хорошо справляются со своей задачей, и в 90% случаев всё встаёт без багов. Однако ниже я оставлю некоторые комментарии о проблемах, с которыми сталкивался сам или о которых говорили знакомые и коллеги.


#### Win {#rintro-rinstallation-win}

:::{.lab-junior}
:::

Ниже есть пример установки R на Win (@fig-rinstallation-win), если вдруг у вас возникли какие-то проблемы при установке. Скорее всего всё прошло достаточно ровно.

Самая частая проблема --- имя пользователя на кириллице. Компьютер вообще достаточно плохо переваривает кириллические символы. Особенную же проблему составляют такие символы в путях к файлам. Поскольку на Win папка пользователя называется именем пользователя, то в случае кириллического имени, естественно, её имя будет на кириллице. Это можно пережить, перезадав некоторое дефолтные пути в настройках, однако если есть возможность переименовать пользователя и папку, я бы рекомендовал это сделать. Ну, так, чтобы не было неожиданных внезапностей.

:::{#fig-rinstallation-win}

{{< video https://youtu.be/WoffShoneY8?si=Du9xHiOVBHZaOYuE >}}

Установка R на Windows (на примере Windows 10 Pro)
:::


#### macOS {#rintro-rinstallation-mac}

:::{.lab-junior}
:::

:::{.callout-important}
###### Apple silicon vs Intel Macs

Обратите внимание на [разные версии](https://cran.r-project.org/bin/macosx/) для Apple silicon (M1) и Intel Macs.
:::

Ниже есть пример установки R на Mac (@fig-rinstallation-mac), если вдруг у вас возникли какие-то проблемы при установке.

Тут в 99.9% случаев всё ровно. Бывает, что уже в процессе работы некоторые пакеты жалуются на недоустановленное что-то или на какие-либо несовместимости, но это случается невероятно редко и обычно достаточно легко лечится.

:::{#fig-rinstallation-mac}

{{< video https://youtu.be/WoffShoneY8?si=Du9xHiOVBHZaOYuE >}}

Установка R на macOS (на примере macOS Sonoma 14.1.1)
:::


#### Linux {#rintro-rinstallation-linux}

:::{.lab-middle}
:::

:::{.callout-important}
###### Обилие дистрибутивов

Конечно, если вы работете на Linux, то прекрасно знаете о дистрибутивах и их особеностях. Однако отмечу, что на разные дистрибутивы Linux устанавливаются [разные версии](https://cran.rstudio.com/bin/linux/).
:::

:::{.callout-note}
###### Примеры на Linux

Я работаю на Ubuntu (ВЕРСИЯ), поэтому примеры для Linux будут приводится именно для этого дистрибутива. На других дистрибутивах могут быть свои особенности.
:::

Ниже есть пример установки R на Linux (Ubuntu) (@fig-rinstallation-linux), если вы только начинаете знакомство с Linux и у вас возникли какие-то проблемы при установке.

Если вы пользователь Linux, значит R вы, вероятно, ставите через Terminal. Например, с помощью такой команды:

```
sudo apt install r-base-dev
```

Скорее всего, всё пройдет хорошо, и базовый R будет работать. Проблемки могут случиться чуть дальше, когда мы будем ставить дополнительные пакеты, в которых будет идти основная наша работа --- R может не найти некоторые системные пакеты. Такая проблема возникла у меня возникла (на Ubuntu 22.04) --- помогла команда ниже:

```
sudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev linfreetype6-dev libpng-dev libtiff5-dev libjpeg-deva
```

Сначала мы будем знакомиться с базовым R и работать только в нём, но имейте в виду, что тут есть некая команда, которая может пригодиться.

:::{#fig-rinstallation-linux}

{{< video https://youtu.be/WoffShoneY8?si=Du9xHiOVBHZaOYuE >}}

Установка R на Linux (на примере Ubuntu ВЕРСИЯ)
:::



### Установка RStudio {#r-intro-rstudioinstallation}

:::{.lab-junior}
:::

Казалось бы, мы поставили R, и можно было бы на этом закончить. И это, в общем-то, правда --- [можно работать и просто в R](#r-intro-rinterface). Однако для упрощения и увеличения приятности работы стоит установить RStudio[^rstudio-kek]. Установочные файлы лежат [тут](https://posit.co/download/rstudio-desktop/). На всякий случай, прикреплены примеры установки RStudio для Win, macOS и Linux (@fig-rstudioinstallation).

[^rstudio-kek]:По пути надо ещё не перепутать её с [R-Studio](https://www.r-studio.com/ru/), которая восстанавливает данные с диска. Критическое сходство названий двух программ обязывает к повышенной внимательности при написании работ/статей/отчётов/заявок на гранты, в которых вы упоминаете RStudio --- иногда рецензенты весьма недоумевают, как исследователи анализировали данные с помощью ПО для восстановления данных. Хотя это может звучать несколько странно, такой случай имел место быть в реальности…

RStudio --- это интегрированная среда разработки (IDE) (подробнее см. [тут](#rintro-ide)). Она расширяет возможности R, предоставляет более юзабельный интерфейс для взаимодействия с языком и в целом делает работу с R радостной и приятной.

RStudio это не единственная среда для работы с R, но определенно самая удобная и популярная, поэтому мы будем пользоваться именно ею. RStudio является IDE, разработанной специально для работы в R, однако это вовсе не значит, что в ней нельзя использовать другие языки программирования. Например, книжка, которуя вы сейчас читаете, написана с использованием [R](https://www.r-project.org/about.html), [Python](https://www.python.org/), [HTML](http://htmlbook.ru/html), [SASS](https://sass-lang.com/), [JavaScript](https://learn.javascript.ru/), [YAML](https://yaml.org/) и других языков --- при этом вся работа велась в RStudio. Вот такая мощная вещь.

:::{#fig-rstudioinstallation}

{{< video https://youtu.be/WoffShoneY8?si=Du9xHiOVBHZaOYuE >}}

Установка RStudio на основные операционные системы
:::


#### Что такое IDE? {#rintro-ide}

:::{.lab-junior}
:::

Интегрированная среда разработки (IDE, integrated development environment) --- это специальная программа, которое предоставляет широкий спектр возможностей для разработки программного обеспечения. Возможно, вы слышали такие слова, как [PyCharm](https://www.jetbrains.com/ru-ru/pycharm/) или [Visual Studio Code](https://code.visualstudio.com/) --- это всё варианты IDE.

Обычно IDE содержит несколько ключевых компонентов:

- текстовый редактор для написания скриптов
- [транслятор](appendix-proglang.qmd) языка
- отладчик (debugger)
- средства автоматизации сборки (build automation tools)

Обычно IDE позволяют работать с несколькими языками программирования, но бывают и специализированные.

> И хотя всё ещё присутствует холивар относительного того, является ли R языком программирования (ССЫЛКА), RStudio однозначно можно назвать полноценной IDE, так как разработка в ней вполне может вестить. Пример продукта разработки прямо перед вами --- книжка, которую вы сейчас читаете.


### Posit Cloud {#r-intro-positcloud}

:::{.lab-junior}
:::

В подавлающем большинстве случаев работа в R происходит на десктопной версии. Однако это не единственный вариант. Например, если вам нужно резко, быстро и несложно обработать небольшие данные, а вы в отпуске без своего любимого персонального компа, можно поработать в облачной версии RStudio --- [Posit Cloud](https://posit.cloud/).

В Posit Cloud используются RStudio Projects[^rstudio-projects-note], интерфейс полностью совпадает с десктопной версией RStudio, доступны дополнительные пакеты. Однако объем доступной оперативной памяти существенно ограничен, что, безусловно, может создать существенные сложности. Тем не менее, такой вариант работы вполне можно рассмотреть в каких-то ограниченных условиях.

[^rstudio-projects-note]: Их мы будем обсуждать в [разделе о работе с данными](r-data.qmd#r-data-rstudio-projects).



## Интерфейс R {#r-intro-rinterface}

:::{.lab-junior}
:::


## Интерфейс RStudio {#r-intro-rstudiointerface}

:::{.lab-junior}
:::


## Работа в консоли {#r-intro-console}

:::{.lab-junior}
:::


## Работа в скрипте {#r-intro-script}

:::{.lab-junior}
:::

## Цитирование R {#r-intro-citation}

:::{.lab-junior}
:::

На R, как и на любые ресурсы, используемые при написании статьи или отчета, следует ссылаться — цитировать в разделе References. Для этого существует удобная команда:

```{r r-citation}
citation()
```

В аутпуте есть вариант ссылки в форматах APA и BibTeх. Второй вам пригодится, если вы пишете отчеты в $\LaTeX$ или R Markdown и Quarto, первый --- в других случаях. Если вы копируете APA-цитату в текстовый редактор, добавьте курсивное форматирование на текст, заключенный между андерскорами (нижними подчеркиваниями[^underscore_term], `_`) , а сами андерскоры удалите[^underscore_md].

[^underscore_term]: Согласно правилам современного русского литературного языка, термин «нижнее подчеркивание» является плеоназмом, так как любое подчеркивание выполняется снизу. Однако такой термин используется наряду с терминами *подчерк* и *underscore*, поэтому использую его и я.

[^underscore_md]: Такой синтаксис используется в Markdown --- в частности, R Markdown.

Кроме базового R, мы будем активно использовать разные дополнительные пакеты для расширения его возможностей. На использованные в работе пакеты также необходимо ссылаться. Чтобы получить цитирование конкретного пакета[^citation_package], надо передать его название внутрь функции `citation()`. Ниже приведен пример для пакета `ggplot2`, которые мы будем использоваться для построения визуализаций:

[^citation_package]: Чтобы функция citation("pkgname") работала, пакет pkgname должен быть установлен на ваш компьютер. Здесь pkgname — название какого-либо дополнительного пакета.

```{r r-citation-ggplot2}
citation("ggplot2")
```



## Работа в R из командной строки {#r-intro-cli}

:::{.lab-guru}
:::



***

###### Session Info {#session_info .unnumbered}

```{r session-info}
sessionInfo()
```
